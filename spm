#!/bin/sh

mkdir -p "${conf_dir:=${XDG_CONFIG_HOME:-$HOME/.config}/spm}/state"

[ -f "$conf_dir/config" ] || {
    printf "(SPM) %s\n" "Default $conf_dir/config Created. Please modify it accordingly and run the script again."
    cat <<EOF > "$conf_dir/config"
# battery polling frequency
sleep 10

# desktop notification command
notifycmd() { notify-send "Battery: \$batt_status \${batt_percent}%"; }

# backlight command
# backlightcmd="xbacklight -set"                                #uncomment for xbacklight
# backlightcmd="light -S"                                       #uncomment for light
# backlightcmd="brightnessctl s" ; pct="%"                      #uncomment for brightnessctl
backlightcmd="lux -S"            ; pct="%"                      #uncomment for lux

discharging_hook() {
    a=525
    b=500
    for i in {1..20};do
        a="\$((\$a-25))"
        b="\$((\$b-25))"
        [ "\$batt_percent" -lt "\$a" ] && [ "\$batt_percent" -gt "\$b" ] && {
            # > 25%, discharging
            [ "\$batt_percent" -gt 25 ] && {
                \$backlightcmd 80\$pct
                notifycmd
            }
            # 10-25%, discharging
            [ "\$batt_percent" -lt 25 ] && [ "\$batt_percent" -gt 10 ]&& {
                \$backlightcmd 50\$pct
                notifycmd
            }
            # < 10%, discharging
            [ "\$batt_percent" -lt 10 ] && {
                \$backlightcmd 10\$pct
                notifycmd
            }
        }
    done
}

charging_hook() {
    # battery Charging / Full
    notifycmd
    \$backlightcmd 100\$pct
}
EOF
    exit 0
}

while :; do
    . "$conf_dir/config"

    cat /sys/class/power_supply/BAT?/status > /dev/null || {
        printf -- "%s\n" "(SPM) Battery not detected."
        exit 1
    }

    unset batt_percent
    for b in /sys/class/power_supply/BAT?; do batt_percent="$(($batt_percent+$(cat "$b/capacity")))"; done

    if grep -q Discharging /sys/class/power_supply/BAT?/status; then
        batt_status=Discharging
    else
        batt_status=Charging
    fi

    case $batt_status in
        Discharging)
            [ -f "$conf_dir/state/Discharging" ] || {
                rm -f "$conf_dir/state/Charging"
                > "$conf_dir/state/Discharging"
                discharging_hook
            }
            ;;
        Charging)
            [ -f "$conf_dir/state/Charging" ] || {
                rm -f "$conf_dir/state/Discharging"
                > "$conf_dir/state/Charging"
                charging_hook
            }
            ;;
    esac
done
