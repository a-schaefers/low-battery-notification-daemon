* What
Weighing in at 56 lines of code, this is my no-frills, POSIX shell power manager.
It sends desktop notifications and runs user custom code.

* How
The script can be copied and pasted directly in to .xinitrc or similar.

Make sure to set the variables and user_custom functions accordingly in the comment block at the top of the script.

#+BEGIN_SRC bash
  ############################################################################
  # battery polling frequency
  sleep 20

  # battery percentages that send notifications
  THRESHHOLDS="20 10 5"

  # arbitrary code block that runs when a battery warning threshhold is hit
  user_custom_batt_low() {
      if [ "$batt" -eq 20 ]; then xbacklight -set 20; fi
      if [ "$batt" -eq 10 ]; then xbacklight -set 10; fi
      if [ "$batt" -eq 5 ]; then xbacklight -set 5; fi
  }

  # arbitrary code block that runs once when the battery % rises above the highest threshhold
  user_custom_batt_normal() {
      xbacklight -set 100
  }
  ############################################################################
#+END_SRC

* Dependencies:
The "acpi" command is used to determine the current battery level

The "notify-send" command (libnotify) is used to send desktop notifications

The user_custom_batt_low() is configured for xbacklight/acpilight already-- users of lux, light or whatever will need to customize it.
